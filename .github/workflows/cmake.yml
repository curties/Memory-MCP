# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DBUILD_TESTING=ON

    - name: Build
      run: cmake --build build --config ${{ env.BUILD_TYPE }} --parallel

    - name: Test
      working-directory: build
      run: |
        if (Test-Path "CTestTestfile.cmake") {
          ctest -C ${{ env.BUILD_TYPE }} --output-on-failure
        } else {
          Write-Host "No tests configured"
        }

    - name: Verify Binary
      run: |
        if (Test-Path "build\bin\${{ env.BUILD_TYPE }}\memory-mcp-server.exe") {
          Write-Host "✅ Windows binary built successfully"
        } else {
          Write-Host "❌ Windows binary not found"
          exit 1
        }

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: memory-mcp-server-windows
        path: build/bin/
        retention-days: 7

